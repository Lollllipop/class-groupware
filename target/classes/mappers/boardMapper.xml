<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ja.classgroupware.base.persistence.BoardDAO">
	<!-- pure -->
	<insert id="insert">
		insert into board(bo_idx, class_idx, user_idx, bo_title, bo_content, bo_writedate, bo_isnotice, bo_role, bo_views, bo_comments, bo_hasfiles)
		values(board_seq.nextval, #{class_idx}, #{user_idx}, #{bo_title}, #{bo_content}, SYSDATE, #{bo_isnotice}, #{bo_role}, 0, 0, #{bo_hasfiles})
	</insert>

	<select id="selectByIdx" resultType="com.ja.classgroupware.base.vo.BoardVO">
		select *
		from board
		where bo_idx = #{bo_idx}
	</select>

	<select id="selectAll" resultType="com.ja.classgroupware.base.vo.BoardVO">
		<![CDATA[
			select bo_idx, class_idx, user_idx, bo_title, bo_content, bo_writedate, bo_isnotice, bo_role 
			from board
			where bo_idx > 0 
			order by bo_idx desc
		]]>
	</select>

	<update id="update">
		update board 
		set bo_title = #{bo_title},
			bo_content = #{bo_content},
			bo_isnotice = #{bo_isnotice},
			bo_updatedate = SYSDATE
		where bo_idx = #{bo_idx}
	</update>

	<delete id="delete">
		delete 
		from board 
		where bo_idx = #{bo_idx}
	</delete>


	<!-- mixed -->
	<select id="selectAllList" resultType="com.ja.classgroupware.board.domain.BoardDTO">
		select bo_idx, s.user_idx, bo_title, bo_writedate, bo_isnotice, bo_role, bo_views, user_name, bo_comments
		from board b, users s
		where b.user_idx = s.user_idx
	    and class_idx = #{class_idx}
	    and bo_role = #{bo_role} 
	</select>
	
	<select id="selectDetailByIdx" resultType="com.ja.classgroupware.board.domain.PostMainDTO">
		select bo_idx, s.user_idx, user_name, bo_title, bo_content, bo_writedate, bo_updatedate, bo_isnotice, bo_role, bo_views, bo_comments
		from board b, users s
		where b.user_idx = s.user_idx
		and bo_idx = #{bo_idx}
	</select>
	
	<!-- etc -->
	<select id="selectTotalCount" resultType="_int">
		select count(*)
		from board
	</select>
	
	<select id="selectSelectedPostsCount" resultType="_int">
		SELECT COUNT(*)
		FROM board
		WHERE bo_isnotice != 'true'
		<include refid="selectCount"></include>
	</select>
	
	<select id="selectKeyword" resultType="string">
		<choose>
			<when test="searchType = 't'.toString()">
				SELECT DISTINCT bo_title
			</when>
			<when test="searchType = 'u'.toString()">
				SELECT DISTINCT user_name
			</when>
		</choose>
		<![CDATA[
		    FROM board b, users u
		    WHERE b.user_idx = u.user_idx
		]]>
		<choose>
			<when test="searchType = 't'.toString()">
				<![CDATA[
					AND bo_title LIKE ('%' || #{debouncedSearchKeyword} || '%')
					AND LENGTH(bo_title) < 15
				]]>
			</when>
			<when test="searchType = 'u'.toString()">
				<![CDATA[
					AND user_name LIKE ('%' || #{debouncedSearchKeyword} || '%')
					AND LENGTH(user_name) < 15
				]]>
			</when>
		</choose>
		<![CDATA[
		    AND ROWNUM <= 11
		]]>
	</select>
	
	<update id="updateViewsWithPlusOne">
		update board 
		set bo_views = bo_views + 1
		where bo_idx = #{bo_idx}
	</update>
	
	<select id="selectPage" resultType="com.ja.classgroupware.board.domain.BoardDTO">
	<!-- 여기 수정해야함 공지사항 맨 위에 항상 나오도록  sql을 union으로 바꾸면 될듯 -->
		<![CDATA[
			SELECT * 
			FROM
			(
			    SELECT bo_idx, s.user_idx, bo_title, bo_writedate, bo_isnotice, bo_role, bo_views, user_name, bo_comments, bo_hasfiles
			    FROM board b, users s
			    WHERE b.user_idx = s.user_idx
			    AND bo_isnotice = 'true'
			    UNION
				SELECT bo_idx, user_idx, bo_title, bo_writedate, bo_isnotice, bo_role, bo_views, user_name, bo_comments, bo_hasfiles
				FROM (
				        SELECT a.*, ROWNUM AS rnum
				        FROM (
				                SELECT bo_idx, s2.user_idx, bo_title, bo_writedate, bo_isnotice, bo_role, bo_views, user_name, bo_comments, bo_hasfiles
				                FROM board b2, users s2
				                WHERE b2.user_idx = s2.user_idx
				                AND class_idx = #{class_idx}
				                AND bo_role = #{bo_role}
				                AND bo_isnotice != 'true' 
		]]>
			                	<include refid="search"></include>             
		<![CDATA[
				                ORDER BY bo_idx desc
				             ) a
				        WHERE ROWNUM <= #{pageInfo.max}
				    )
				WHERE rnum > #{pageInfo.offset}
			)
			ORDER BY bo_isnotice desc, ${pageInfo.sort} ${pageInfo.order}, bo_idx desc
		]]>
	</select>
	
	<!-- include 내용들 -->
	<sql id="search">
		<if test="searchInfo.searchType != null">
			<if test="searchInfo.searchType == 't'.toString()">
				AND bo_title like ('%' || #{searchInfo.searchValue} || '%')
			</if>
			<if test="searchInfo.searchType == 'u'.toString()">
				AND user_name like ('%' || #{searchInfo.searchValue} || '%')
			</if>
		</if>
	</sql>
	
	<sql id="selectCount">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND bo_title LIKE ('%' || #{searchValue} || '%')
			</if>
			<if test="searchType == 'u'.toString()">
				AND user_name LIKE ('%' || #{searchValue} || '%')
			</if>
		</if>
	</sql>
</mapper>
